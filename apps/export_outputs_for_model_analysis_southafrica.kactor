app export_outputs_for_model_analysis_southafrica

action main:

action main:

/*
 * Set the directory of the your output nesting the results within more folders by separatng them with a slash ("/") 
 */
	output_folder_directory = "ecosystem_type_analysis/k.lab_outputs/SouthAfrica"

/*
 * Set observable for which a map should be stored (as raster/vector files)
 */
	set observables_urns (
//		{landcover:LandCoverType} //generic semantic concept goes with their URN into {} 
		data.southafrica.et_southafrica
		data.southafrica.nlc_southafrica
		data.glc_lc
		data.dinerstein_ecoregion
		rules_based_modelling.south_africa.ecosystem_type_iucn_get
		rules_based_modelling.south_africa.forest_type		
	)
/*
 * Set the tables to summarise statistics or generate indicator for an observation (as .xls files) 
 */
 	set table_urns (
//		peopleea.forest.birds.birds_raw_variable // tables are never concepts, so their URN has to be used without {}
//		peopleea.forest.birds.birds_indicator
	)
 
/*
 * Set the spatial dimensions of the analysis
 * Geographical boundaries can be set using:
 * WKT (coordinates points of the vertices)
 * URN of a resource (i.e. a vector file, which can contain multiple features)
 * Creates n output (.tiff and .xlsx files) for each feature (ID) in the spatial context resource (n = n_tables x n_ID_features).  
 */

//	wkt_context = Space(shape='POLYGON ((19.016595 48.192287, ..., 19.016595 48.192287))') //Set the context using WKT or the URN of a resource
	spatial_contexts_urn = "local:justus.muhando:esa.aries.sandbox:esa_weed_south_africa_priority_areas_epsg4326_v2"
	resolution = 30.m

/*
 * Set temporal boundaries of the analysis 
 * currently focused on yearly results because have been used mainly for reporting accounting results
 * different temporal resolution, both higher (e.g. seasonal, monthly, daily) or lower (i.e. 3 or 5 year-periods) can be observed
 * Results are adjusted to the temporal dimensions set
 * but the underlying data must be granular (frequent) enough for higher temporal resolution observations
 */
	for year in (2022) (
		
	
/*
 * Set the right parameters (e.g use the wkt_context for WKT or the spatial_contexts_urn for using vector files) in the context
 */			
//		for urn in observables_urns(	
//			context(spatial_contexts_urn,resolution,Time(start=[year], end=[year+1], step=1.year),urn): state -> (
		for priority_area in spatial_contexts_urn(
				if [priority_area.weed_site == 'SA1'|| priority_area.weed_site == 'SA1'||priority_area.weed_site == 'SA2'] //|| feature.layer == 'central_colombia' || feature.layer == 'south_colombia']
					(for urn in observables_urns(	
					context(priority_area,resolution,Time(year=year),urn): state -> (
						set urn_name ""
						if [urn.toString().startsWith("[")] (
						set urn_name [urn.name]
						)
						else (
						set urn_name urn
						)	
				if [state.toString().contains("[nothing")] (
					warning(["Observation " + urn_name + " return nothing"])
				) else ( 
					state.export([output_folder_directory + "/" + priority_area.weed_site +"__"+ urn_name + "__" + resolution + "_"+ year + ".tiff"])
						)
					)
				)
			)
		)

//		for table_urn in table_urns(
//			context(wkt_context,resolution,Time(start=[year], end=[year+1], step=1.year),table_urn)
//			pack(:tables): url -> 
//
//				save(url, filename=[output_folder_directory + "/" + year + "/" + "tables" + "/" + table_urn + ".xlsx"])
//		)
//
//	)
)


